{"version":3,"sources":["apis/tmdb.js","components/MovieDisplay.js","components/MovieList.js","components/Genre.js","components/Rating.js","components/App.js","index.js"],"names":["axios","create","baseURL","params","api_key","MovieDisplay","props","movie","movieGenres","react_default","a","createElement","className","src","concat","poster_path","alt","title","data-testid","join","MovieList","value","movies","genres","rating","renderMovies","sort","b","filter","visibility","map","genre_ids","genreId","find","id","name","vote_average","components_MovieDisplay","key","Genre","onSelected","onRemoved","renderGenres","genre","type","onChange","e","target","checked","htmlFor","Rating","handleChange","ratingChange","_this","this","min","max","step","React","Component","App","state","filteredGenres","getGenres","_callee","response","regenerator_default","wrap","_context","prev","next","tmdb","get","sent","data","setState","stop","getMovies","_callee2","results","_context2","Object","objectSpread","genreChecked","filterResults","genreUnchecked","filteredGenreId","_this$state","every","includes","result","_this$state2","components_MovieList","components_Rating","components_Genre","ReactDOM","render","src_components_App","document","querySelector"],"mappings":"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","file":"static/js/main.49333a15.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst KEY = 'a007b887b49706263b3fb31d7ef95cab';\n\nexport default axios.create({\n  baseURL: `https://api.themoviedb.org/3/`,\n  params: {\n      api_key: KEY\n  }\n});\n\n","import React from 'react';\n\nconst MovieDisplay = (props) => {\n  const { movie, movieGenres } = props;\n\n  return (\n    <div className=\"column\">\n      <div className=\"image\">\n        <img className=\"ui fluid image\" src={`https://image.tmdb.org/t/p/w200${movie.poster_path}`} alt={movie.title}/>\n      </div>\n      <div className=\"content\">\n        <h4 data-testid=\"movie-title\" className=\"header\">{movie.title}</h4>\n        <p className=\"description\">{movieGenres.join(', ')}</p>\n      </div>\n    </div>\n  )\n}\n\nexport default MovieDisplay;","import React from 'react';\nimport MovieDisplay from './MovieDisplay';\n\nconst MovieList = (props) => {\n  const { movies, genres, rating } = props;\n\n  // Compare items\n  const compare = (value) => {\n    return (a, b) => a[value] > b[value] ? -1 : 1;\n  }\n\n  const moviesSort = movies.sort(compare('popularity'));\n\n  // Map over sorted movies and set to renderMovies var\n  const renderMovies = moviesSort\n    // Filter through each movie with visibility set to true\n    .filter(movie => movie.visibility)\n    // map over sorted movies state (ref as movie)\n    .map((movie) => {\n      // Empty array for formatted genre names\n      let movieGenres = [];\n      // check inputs have been checked\n      if(movie.genre_ids) {\n        // reassign inputs to array\n        movieGenres = movie.genre_ids\n          // map over checked genres\n          .map(genreId => genres\n          // Find genre ID names that match filtered state\n          .find(genres => genres.id === genreId).name);\n      }\n\n      // If vote average is less than rating, return null\n      if (movie.vote_average < rating) {\n        return null;\n      // Else display the movie and pass props down to MovieDisplay component\n      } else {\n        return (\n          <MovieDisplay \n            key={movie.id} \n            movie={movie}\n            movieGenres={movieGenres}\n          />\n        )\n      }\n  });\n  \n  // Display rendered movies\n  return (\n    <div className=\"ui stackable four column grid\" data-testid=\"render-movies\">\n      {renderMovies}\n    </div>\n  )\n}\n\nexport default MovieList;","import React from 'react';\n\nconst Genre = (props) =>  {\n  const { genres, onSelected, onRemoved } = props;\n\n  const renderGenres = genres.map((genre) => {\n\n    const { id, name } = genre;\n\n    const handleChange = (e) => {\n      // if event target is checked\n      if (e.target.checked) {\n        // pass ID to selected function\n        onSelected(id);\n      // else pass ID to remvoed function\n      } else if (!e.target.checked) {\n        onRemoved(id);\n      }\n    };\n\n    return (\n      <div className=\"item\" key={id}>\n        <div className=\"ui checkbox description\">\n          <input \n            type=\"checkbox\" \n            value={id}\n            id={id}\n            name=\"genre\"\n            onChange={handleChange}\n          />\n          <label htmlFor={id}><span className=\"description\">{name}</span></label>\n        </div>\n      </div>\n    )\n  });\n\n  return <div>{renderGenres}</div>\n}\n\nexport default Genre;","import React from 'react';\n\nclass Rating extends React.Component {\n  // trigger event - set rating state as target value\n  handleChange = (e) => {\n    const { ratingChange } = this.props;\n    ratingChange(e.target.value); \n  }\n\n  // Pass PROPS through to function\n  render() {\n    const { rating } = this.props;\n    return (\n      <div>\n        <input \n          type=\"range\" \n          min=\"0\" \n          max=\"10\" \n          // Display value as rating state\n          value={rating} \n          data-testid=\"rating\"\n          // on change, run handleChange function\n          // COULD ALSO DO:\n          // onChange={(e) => ratingChange(e.target.value)}\n          // But want to keep it in a way that is simpler for me to understand\n          onChange={this.handleChange}\n          step=\"0.5\"\n        />\n      </div>\n    )\n  }\n};\n\nexport default Rating;","import React from 'react';\nimport tmdb from '../apis/tmdb';\nimport MovieList from './MovieList'\nimport Genre from './Genre';\nimport Rating from './Rating';\nimport './App.css';\n\nclass App extends React.Component {\n  state = { \n    // Set initial state\n    movies: [], \n    genres: [],\n    filteredGenres: [],\n    rating: 3\n  };\n\n  componentDidMount() {\n    // On load, get movies and genres\n    this.getGenres();\n    this.getMovies();\n  };\n\n  getGenres = async () => {\n    const response = await tmdb.get('/genre/movie/list');\n\n    // Destructuring genres from response.data\n    const { genres } = response.data;\n\n    // Set response as state for genres\n    this.setState({ \n      // would be genres: genres\n      genres\n    });\n  };\n\n  getMovies = async () => {\n    const response = await tmdb.get('/movie/now_playing');\n\n    // destructure results\n    const { results } = response.data;\n\n    // Set response as state for movies\n    this.setState({ \n      movies: results\n      .map(movie => ({\n        ...movie,\n        // spread and set flag property to true\n        visibility: true\n      }))\n    });\n  };\n\n  genreChecked = (id) => {\n    const { filteredGenres } = this.state;\n\n    this.setState({\n      filteredGenres: filteredGenres.concat(id)\n    }, this.filterResults);\n  };\n    \n  genreUnchecked = (id) => {\n    const { filteredGenres } = this.state;\n\n    this.setState({\n      // Filter filteredGenres state if checked ID doesn't match\n      filteredGenres: filteredGenres.filter(filteredGenreId => !(filteredGenreId === id))\n    }, this.filterResults);\n  };\n  \n  filterResults = () => {\n      const { movies, filteredGenres } = this.state;\n\n      this.setState({\n        movies: movies\n          .map(movie => ({\n            ...movie,\n            // check each genre ID checked in filter state matches movie genre ID & spread in results\n            visibility: filteredGenres.every(filteredGenreId => movie.genre_ids.includes(filteredGenreId))\n          }))\n      });\n  }\n\n  ratingChange = (result) => {\n    // Set rating state to the target value\n    this.setState({\n      rating: result\n    });\n  };\n\n  render() {\n    const { genres, movies, rating, filteredGenres } = this.state;\n\n    return (\n      <div className=\"ui main container\" data-testid=\"app\">\n        <header className=\"ui header\">\n          <div className=\"ui one column grid\">\n            <div className=\"column\">\n              <h1 className=\"logo\">MovieMania</h1>\n            </div>\n          </div>\n        </header>\n\n        <div className=\"ui grid\"> \n          <div className=\"twelve wide column\">              \n            <MovieList \n              genres={genres} \n              movies={movies} \n              rating={rating} \n            />\n          </div>  \n          <div className=\"four wide column\">  \n            <div className=\"ui list\">\n              <h2 className=\"heading-filter\">Filter by Rating</h2>\n              <Rating \n                ratingChange={this.ratingChange} \n              />\n              <h2 className=\"heading-filter\">Filter by Genre</h2>\n              <Genre \n                genres={genres} \n                filteredGenres={filteredGenres} \n                onSelected={this.genreChecked} \n                onRemoved={this.genreUnchecked} \n              />\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nexport default App; ","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\n\nReactDOM.render(\n  <App />,\n  document.querySelector(\"#root\")\n);"],"sourceRoot":""}